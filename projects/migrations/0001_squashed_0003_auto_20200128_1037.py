# Generated by Django 2.2.8 on 2020-01-28 10:41

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import rules.contrib.models
import stream_django.activity


class Migration(migrations.Migration):

    replaces = [('projects', '0001_squashed_0040_auto_20200117_1242'), ('projects', '0002_auto_20200118_0641'), ('projects', '0003_auto_20200128_1037')]

    initial = True

    dependencies = [
        ('photologue', '0011_auto_20190223_2138'),
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('bal', models.IntegerField(default=20, validators=[django.core.validators.MaxValueValidator(100)])),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(editable=False)),
                ('updated_at', models.DateTimeField(editable=False)),
                ('type', models.CharField(choices=[('business', 'business'), ('cause', 'cause')], max_length=20)),
                ('name', models.CharField(max_length=50)),
                ('description', models.CharField(max_length=300)),
                ('published', models.BooleanField()),
                ('end_date', models.DateField(blank=True, null=True)),
                ('text', models.TextField()),
                ('gallery', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='photologue.Gallery')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Announcement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(editable=False)),
                ('updated_at', models.DateTimeField(editable=False)),
                ('text', models.TextField(verbose_name='announcement')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='projects.Project')),
            ],
            bases=(rules.contrib.models.RulesModelMixin, models.Model, stream_django.activity.Activity),
        ),
        migrations.CreateModel(
            name='TimeNecessity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(editable=False)),
                ('updated_at', models.DateTimeField(editable=False)),
                ('name', models.CharField(max_length=50)),
                ('description', models.CharField(max_length=300)),
                ('price', models.IntegerField()),
                ('count', models.IntegerField(default=1)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='projects.Project')),
            ],
            options={
                'abstract': False,
            },
            bases=(rules.contrib.models.RulesModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='ThingNecessity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(editable=False)),
                ('updated_at', models.DateTimeField(editable=False)),
                ('name', models.CharField(max_length=50)),
                ('description', models.CharField(max_length=300)),
                ('price', models.IntegerField()),
                ('count', models.IntegerField()),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='projects.Project')),
            ],
            options={
                'abstract': False,
            },
            bases=(rules.contrib.models.RulesModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='MoneySupport',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(editable=False)),
                ('updated_at', models.DateTimeField(editable=False)),
                ('leva', models.FloatField()),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='projects.Project')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
                ('comment', models.TextField(blank=True)),
                ('necessity', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='money_supports', to='projects.ThingNecessity')),
                ('status', models.CharField(choices=[('review', 'review'), ('delivered', 'delivered'), ('accepted', 'accepted'), ('declined', 'declined'), ('expired', 'expired')], default='review', max_length=20)),
                ('status_since', models.DateTimeField(default=django.utils.timezone.now)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Report',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(editable=False)),
                ('updated_at', models.DateTimeField(editable=False)),
                ('text', models.TextField()),
                ('published_at', models.DateTimeField()),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='projects.Project')),
                ('num_vote_down', models.PositiveIntegerField(db_index=True, default=0)),
                ('num_vote_up', models.PositiveIntegerField(db_index=True, default=0)),
                ('vote_score', models.IntegerField(db_index=True, default=0)),
                ('name', models.CharField(max_length=50)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ThingSupport',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(editable=False)),
                ('updated_at', models.DateTimeField(editable=False)),
                ('comment', models.TextField(blank=True)),
                ('price', models.IntegerField()),
                ('necessity', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='supports', to='projects.ThingNecessity')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='projects.Project')),
                ('from_money_supports', models.ManyToManyField(blank=True, to='projects.MoneySupport')),
                ('status', models.CharField(choices=[('review', 'review'), ('delivered', 'delivered'), ('accepted', 'accepted'), ('declined', 'declined'), ('expired', 'expired')], default='review', max_length=20)),
                ('status_since', models.DateTimeField(default=django.utils.timezone.now)),
            ],
            bases=(rules.contrib.models.RulesModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='TimeSupport',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(editable=False)),
                ('updated_at', models.DateTimeField(editable=False)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
                ('end_date', models.DateField()),
                ('comment', models.TextField(blank=True)),
                ('start_date', models.DateField()),
                ('necessity', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='supports', to='projects.TimeNecessity')),
                ('price', models.IntegerField()),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='projects.Project')),
                ('status', models.CharField(choices=[('review', 'review'), ('delivered', 'delivered'), ('accepted', 'accepted'), ('declined', 'declined'), ('expired', 'expired')], default='review', max_length=20)),
                ('status_since', models.DateTimeField(default=django.utils.timezone.now)),
            ],
            options={
                'abstract': False,
                'unique_together': {('necessity', 'user')},
            },
        ),
        migrations.CreateModel(
            name='Community',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(editable=False)),
                ('updated_at', models.DateTimeField(editable=False)),
                ('name', models.CharField(max_length=100)),
                ('text', models.TextField()),
                ('bulstat', models.DecimalField(blank=True, decimal_places=0, max_digits=20, null=True)),
                ('email', models.EmailField(max_length=254)),
                ('phone', models.DecimalField(decimal_places=0, max_digits=20)),
                ('payment', models.TextField()),
                ('bal', models.IntegerField(default=20, validators=[django.core.validators.MaxValueValidator(100)])),
                ('admin', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
            bases=(rules.contrib.models.RulesModelMixin, models.Model),
        ),
        migrations.AddField(
            model_name='project',
            name='community',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='projects.Community'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='user',
            name='communities',
            field=models.ManyToManyField(to='projects.Community'),
        ),
    ]
